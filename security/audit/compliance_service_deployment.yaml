apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestratex-compliance-service
  namespace: orchestratex
  labels:
    app: orchestratex-compliance-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: orchestratex-compliance-service
  template:
    metadata:
      labels:
        app: orchestratex-compliance-service
    spec:
      containers:
      - name: compliance-service
        image: orchestratex/compliance-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
          name: http
        env:
        - name: SLACK_WEBHOOK
          valueFrom:
            secretKeyRef:
              name: orchestratex-secrets
              key: slack_webhook
        - name: PAGERDUTY_SERVICE_KEY
          valueFrom:
            secretKeyRef:
              name: orchestratex-secrets
              key: pagerduty_service_key
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: orchestratex-secrets
              key: smtp_username
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: orchestratex-secrets
              key: smtp_password
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "2"
        volumeMounts:
        - name: config-volume
          mountPath: /etc/compliance
        - name: metrics-volume
          mountPath: /etc/metrics
        - name: logs-volume
          mountPath: /var/log/compliance
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 45
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: compliance-config
      - name: metrics-volume
        emptyDir: {}
      - name: logs-volume
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
        allowPrivilegeEscalation: false
      initContainers:
      - name: init-config
        image: busybox:latest
        command: ['sh', '-c', 'cp -r /config/* /etc/compliance/']
        volumeMounts:
        - name: config-volume
          mountPath: /config
        - name: config-volume
          mountPath: /etc/compliance
      - name: init-metrics
        image: busybox:latest
        command: ['sh', '-c', 'mkdir -p /etc/metrics']
        volumeMounts:
        - name: metrics-volume
          mountPath: /etc/metrics
      - name: init-logs
        image: busybox:latest
        command: ['sh', '-c', 'mkdir -p /var/log/compliance']
        volumeMounts:
        - name: logs-volume
          mountPath: /var/log/compliance
      serviceAccountName: orchestratex-compliance-service
      imagePullSecrets:
      - name: orchestratex-registry-secret
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: orchestratex-compliance-service
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      nodeSelector:
        environment: production
      priorityClassName: system-cluster-critical
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
