name: Test & Lint

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'orchestratex/**'
      - 'requirements.txt'
      - 'setup.py'
      - 'tox.ini'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'orchestratex/**'
      - 'requirements.txt'
      - 'setup.py'
      - 'tox.ini'
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      setup_complete: ${{ steps.setup.outputs.setup_complete }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt
          python -m pip install -e .
        env:
          PIP_NO_CACHE_DIR: off

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Run flake8
        run: |
          python -m flake8 orchestratex/ --count --select=E9,F63,F7,F82 --show-source --statistics
      
      - name: Run black (check mode)
        run: |
          python -m black orchestratex/ --check
      
      - name: Run isort (check mode)
        run: |
          python -m isort orchestratex/ --check
      
      - name: Run mypy
        run: |
          python -m mypy orchestratex/ --strict

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-dev.txt
          python -m pip install -e .
        env:
          PIP_NO_CACHE_DIR: off
      
      - name: Run pytest
        run: |
          python -m pytest orchestratex/ --cov=orchestratex/ --cov-report=xml
      
      - name: Run security checks
        run: |
          python -m safety check
          python -m bandit -r orchestratex/
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true

  docs:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install documentation dependencies
        run: |
          python -m pip install -r docs/requirements.txt
      
      - name: Build documentation
        run: |
          cd docs
          make html
      
      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
          force_orphan: true
