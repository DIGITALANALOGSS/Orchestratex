apiVersion: ci.orchestratex.com/v1
kind: CIConfig
metadata:
  name: orchestratex-ci
  namespace: orchestratex
spec:
  pipeline:
    stages:
      - name: lint
        description: "Code linting and formatting"
        tasks:
          - name: black
            image: python:3.9
            command: "black"
            args: ["--check", "--diff", "src"]
            timeout: "5m"
          - name: isort
            image: python:3.9
            command: "isort"
            args: ["--check", "src"]
            timeout: "5m"
          - name: flake8
            image: python:3.9
            command: "flake8"
            args: ["src"]
            timeout: "5m"
      - name: test
        description: "Run tests"
        tasks:
          - name: unit_tests
            image: python:3.9
            command: "pytest"
            args: [
              "tests/unit",
              "--cov",
              "--cov-report=term-missing",
              "--cov-report=html"
            ]
            timeout: "15m"
          - name: integration_tests
            image: python:3.9
            command: "pytest"
            args: [
              "tests/integration",
              "--cov",
              "--cov-report=term-missing",
              "--cov-report=html"
            ]
            timeout: "30m"
          - name: performance_tests
            image: python:3.9
            command: "pytest"
            args: [
              "tests/performance",
              "--cov",
              "--cov-report=term-missing",
              "--cov-report=html"
            ]
            timeout: "60m"
      - name: security
        description: "Security scanning"
        tasks:
          - name: bandit
            image: python:3.9
            command: "bandit"
            args: ["-r", "src"]
            timeout: "10m"
          - name: safety
            image: python:3.9
            command: "safety"
            args: ["check"]
            timeout: "5m"
          - name: trivy
            image: aquasec/trivy
            command: "trivy"
            args: [
              "--severity",
              "HIGH,CRITICAL",
              "--exit-code",
              "1",
              "--format",
              "template",
              "--template",
              "@contrib/junit.tpl",
              "src"
            ]
            timeout: "10m"
      - name: build
        description: "Build artifacts"
        tasks:
          - name: docker_build
            image: docker:latest
            command: "docker"
            args: [
              "build",
              "-t",
              "orchestratex:${{GITHUB_REF_NAME}}",
              "."
            ]
            timeout: "15m"
          - name: docker_push
            image: docker:latest
            command: "docker"
            args: [
              "push",
              "orchestratex:${{GITHUB_REF_NAME}}"
            ]
            timeout: "10m"
      - name: deploy
        description: "Deploy to environment"
        tasks:
          - name: k8s_deploy
            image: kubectl:latest
            command: "kubectl"
            args: [
              "apply",
              "-f",
              "k8s/deployment.yaml",
              "--namespace",
              "${{K8S_NAMESPACE}}"
            ]
            timeout: "10m"
          - name: k8s_verify
            image: kubectl:latest
            command: "kubectl"
            args: [
              "wait",
              "--for=condition=ready",
              "pod",
              "-l",
              "app=orchestratex",
              "--timeout=300s",
              "--namespace",
              "${{K8S_NAMESPACE}}"
            ]
            timeout: "10m"
  triggers:
    - name: push
      type: git
      events:
        - push
        - pull_request
      branches:
        - main
        - develop
        - release/*
    - name: schedule
      type: cron
      schedule: "0 0 * * *"
      branches:
        - main
    - name: manual
      type: webhook
      secret: ${CI_WEBHOOK_SECRET}
  notifications:
    enabled: true
    channels:
      - type: slack
        webhook: ${SLACK_WEBHOOK}
        channel: "#ci-cd"
        severity:
          warning: true
          critical: true
      - type: email
        recipients:
          - "dev@orchestratex.com"
          - "ops@orchestratex.com"
        severity:
          warning: true
          critical: true
      - type: pagerduty
        service_key: ${PAGERDUTY_SERVICE_KEY}
        severity:
          warning: false
          critical: true
  metrics:
    enabled: true
    collection:
      interval: "1m"
      retention:
        days: 30
        compression: true
        encryption: true
    providers:
      - name: prometheus
        url: "http://prometheus.orchestratex.svc.cluster.local:9090"
        scrape_interval: "15s"
      - name: grafana
        url: "http://grafana.orchestratex.svc.cluster.local:3000"
        dashboard_refresh: "30s"
    metrics:
      - name: pipeline_success_rate
        description: "Pipeline success rate"
        unit: "%"
        aggregation: "avg"
        threshold:
          warning: 95
          critical: 90
      - name: pipeline_duration
        description: "Pipeline execution time"
        unit: "s"
        aggregation: "avg"
        threshold:
          warning: 300
          critical: 600
      - name: test_coverage
        description: "Test coverage"
        unit: "%"
        aggregation: "avg"
        threshold:
          warning: 85
          critical: 80
  alerts:
    enabled: true
    rules:
      - name: pipeline_failure
        description: "Pipeline failure detected"
        severity: critical
        threshold: 1
        notification_channels:
          - type: slack
            webhook: ${SLACK_WEBHOOK}
            channel: "#alerts"
          - type: pagerduty
            service_key: ${PAGERDUTY_SERVICE_KEY}
      - name: low_coverage
        description: "Low test coverage"
        severity: warning
        threshold: 85
        notification_channels:
          - type: slack
            webhook: ${SLACK_WEBHOOK}
            channel: "#testing"
          - type: email
            recipients:
              - "dev@orchestratex.com"
    notification_channels:
      slack:
        webhook: ${SLACK_WEBHOOK}
        channel: "#ci-cd"
        severity:
          warning: true
          critical: true
      email:
        recipients:
          - "dev@orchestratex.com"
          - "ops@orchestratex.com"
        severity:
          warning: true
          critical: true
      pagerduty:
        service_key: ${PAGERDUTY_SERVICE_KEY}
        severity:
          warning: false
          critical: true
  compliance:
    enabled: true
    standards:
      - name: ISO 29119
        requirements:
          - "Test planning"
          - "Test design"
          - "Test execution"
          - "Test reporting"
      - name: IEEE 829
        requirements:
          - "Test plan"
          - "Test summary"
          - "Test results"
          - "Test logs"
    exceptions:
      - name: development_environment
        description: "Development environment exception"
        conditions:
          - environment: "dev"
          - threshold: "warning"
      - name: experimental_code
        description: "Experimental code exception"
        conditions:
          - tag: "experimental"
          - threshold: "warning"
  audit:
    enabled: true
    retention:
      days: 365
      compression: true
      encryption: true
    storage:
      type: "s3"
      bucket: "orchestratex-ci-audit"
      region: "us-east-1"
  logging:
    enabled: true
    format: "json"
    level: "info"
    retention:
      days: 30
      compression: true
      encryption: true
    storage:
      type: "s3"
      bucket: "orchestratex-ci-logs"
      region: "us-east-1"
  validation:
    enabled: true
    rules:
      - name: code_quality
        description: "Code quality validation"
        checks:
          - linting
          - formatting
          - complexity
      - name: security
        description: "Security validation"
        checks:
          - vulnerabilities
          - dependencies
          - secrets
      - name: performance
        description: "Performance validation"
        checks:
          - resource_usage
          - response_time
          - throughput
  security:
    enabled: true
    checks:
      - authentication
      - authorization
      - encryption
      - data_protection
    compliance:
      - name: OWASP
        requirements:
          - "Authentication"
          - "Authorization"
          - "Data Protection"
          - "Cryptography"
      - name: NIST
        requirements:
          - "Access Control"
          - "Audit and Accountability"
          - "System and Communications Protection"
  performance:
    enabled: true
    metrics:
      - name: pipeline_throughput
        unit: "pipelines/hour"
        threshold:
          warning: 10
          critical: 5
      - name: resource_usage
        unit: "%"
        threshold:
          warning: 85
          critical: 90
      - name: deployment_latency
        unit: "s"
        threshold:
          warning: 300
          critical: 600
    load_tests:
      - name: pipeline_load
        description: "Pipeline load test"
        parameters:
          pipelines: 10
          duration: "1h"
          assertions:
            - success_rate: 99.9
            - response_time: 300
      - name: deployment_load
        description: "Deployment load test"
        parameters:
          deployments: 50
          duration: "30m"
          assertions:
            - success_rate: 99.9
            - response_time: 120
  coverage:
    enabled: true
    targets:
      - name: quantum_core
        path: "quantum/core"
        threshold:
          statement: 95
          branch: 85
          function: 90
          line: 95
      - name: quantum_ml
        path: "quantum/ml"
        threshold:
          statement: 90
          branch: 80
          function: 85
          line: 90
      - name: quantum_circuit
        path: "quantum/circuit"
        threshold:
          statement: 95
          branch: 90
          function: 95
          line: 95
      - name: quantum_state
        path: "quantum/state"
        threshold:
          statement: 90
          branch: 85
          function: 90
          line: 90
    exclusions:
      - "**/test_*.py"
      - "**/__init__.py"
      - "**/setup.py"
      - "**/migrations/**"
      - "**/docs/**"
      - "**/examples/**"
